name: aml-deploy

on:
  workflow_dispatch:
    inputs:
      model-name:
        description: 'Name of the model to deploy to'
        required: true
        default: 'iris_model'
      model-version:
        description: 'Version of the model to deploy to'
        required: false
        default: ''
      service-name:
        description: 'Deploy service name'
        required: true
        default: 'iris-service'
      repository:
        description: 'The repository from which the slash command was dispatched'
        required: false
      comment-id:
        description: 'The comment-id of the slash command'
        required: false
      issue-number:
        description: 'The issue number from which the slash command was created'
        required: false

jobs:
  deploy:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/env_setup
        with:
          event_name: ${{ github.event_name }}
          issue_number: ${{ github.event.inputs.issue-number }}
          az_workspace: ${{ secrets.AZURE_WORKSPACE }}
          az_resource_group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          az_secret: ${{ secrets.AZURE_LOGIN }}

      - name: Setting env var for deploy and inference config
        run: |
          inf_config=${{ secrets.INFERENCE_CONFIG_FILE }}
          deploy_config=${{ secrets.DEPLOY_CONFIG_FILE }}
          echo "INFERENCE_CONFIG=$inf_config" >> $GITHUB_ENV        
          echo "DEPLOY_CONFIG=$deploy_config" >> $GITHUB_ENV

      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

      - name: Create comment
        if: ${{ github.event.inputs.issue-number != '' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          issue-number:  ${{ github.event.inputs.issue-number }}
          body: |
            Deploying model, [Click here for more details](${{ steps.vars.outputs.run-url }})

      - name: Deploy model
        id: deploy_model
        run: |
          if [ -z "${MODEL_VERSION}" ]; then
            MODEL_VERSION=$( az ml model list -l -n ${MODEL_NAME:='iris_model'} | jq '.[0].version')
            echo 'No model-version passed, setting it to the newest version ${MODEL_VERSION}'
          fi
          res=$(az ml model deploy --name ${SERVICE_NAME:='iris-service'} \
           --model ${MODEL_NAME:='iris_model'}:${MODEL_VERSION} \
           --inference-config-file ${{ env.INFERENCE_CONFIG }} \
           --deploy-config-file ${{ env.DEPLOY_CONFIG }} --overwrite)
          echo ::set-output name=response::$res
        env:
          MODEL_NAME:  ${{ github.event.inputs.model-name }}
          MODEL_VERSION: ${{ github.event.inputs.model-version }}
          SERVICE_NAME: ${{ github.event.inputs.service-name }}

      - name: Create comment
        if: ${{ github.event.inputs.issue-number != '' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          issue-number:  ${{ github.event.inputs.issue-number }}
          body: |
            ${{ steps.deploy_model.outputs.response }}

